name: drwi_pa
channels:
  - conda-forge
  - nodefaults # Speeds solving env, by limiting the number of options

dependencies:
  - python =3.11

  # PyData
  - pandas >=2.1 # 
  - geopandas >=0.14.1  #GeoParquet 1.0.0 supported
  - pyarrow  # for saving to Parquet from GeoPandas
  - geojson
  - openpyxl # read/write Excel 2010+ files (.xlsx & .xlsm)

  # Hydro Data Tools
  - pynhd  # HyRiver: provides access to NHD+ V2 data through NLDI and WaterData web services
  - pygeohydro # HyRiver: for accessing hydrology data through web services

  # Database connections, to run first half of stage1/WikiSRAT_Demo.ipynb
  # - psycopg2  
  # - sqlalchemy

  # Visualization
  - hvplot  # hvPlot installs most HoloViz libs, https://holoviz.org, including matplotlib
  - holoviews >1.15
  - panel >=0.14 # Major update for dashboarding
  - geoviews
  - matplotlib-scalebar
  - contextily  # retrieve tile maps from the internet. Installs RasterIO.
  - cmasher # Adds function to subset colormaps, including from HoloViz's colorcet

  # Interactivity via Jupyter Notebooks
  - jupyterlab >=3.4
  - nodejs  # required for many extensions
  - ipympl  # jupyter-matplotlib, https://github.com/matplotlib/ipympl
  - ipywidgets  # Required for HoloViz interactivity
  # Dev tools: Language Server Protocol (LSP) (Optional), for...
    # code navigation + hover suggestions + linters + autocompletion + rename
  - python-lsp-server >=1.6 # LSP extension for Python (pylsp), including:
    # Rope for Completions and renaming
    # Pyflakes linter to detect various errors
    # McCabe linter for complexity checking
    # pycodestyle linter for style checking
    # pydocstyle linter for docstring style checking (disabled by default)
    # autopep8 for code formatting
    # YAPF for code formatting (preferred over autopep8)
    # flake8 for error checking (disabled by default)
    # pylint for code linting (disabled by default)
  - pylsp-mypy  # MyPy type checking for Python >=3.7.
  - jupyterlab-lsp # Provides both server extension and lab extension

  # package management
  - conda
  - conda-build
  - conda-libmamba-solver

  # PIP install requirements only if it is not  possible with conda
  # https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#using-pip-in-an-environment
  - pip
  - pip:
    - lonboard # very fast vector maps, https://developmentseed.org/blog/2023-10-23-lonboard
        # conda didn't have the latest: https://anaconda.org/conda-forge/lonboard
